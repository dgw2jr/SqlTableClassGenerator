<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Autofac.Extras.Ordering</name>
    </assembly>
    <members>
        <member name="T:Autofac.Extras.Ordering.OrderedRegistrationExtensions">
            <summary>
            An Autofac extension that provides control over the order in which multiple dependencies are resolved.
            By default, order is not guaranteed when resolving <see cref="T:System.Collections.Generic.IEnumerable`1"/>. Essentially, a new 
            relationship type is supported. Declaring a dependency of type <see cref="T:System.Linq.IOrderedEnumerable`1"/> 
            with this extension allows for a deterministic order.
            </summary>
        </member>
        <member name="M:Autofac.Extras.Ordering.OrderedRegistrationExtensions.OrderBy``3(Autofac.Builder.IRegistrationBuilder{``0,``1,``2},System.IComparable)">
            <summary>
            Configures an explicit order that a service should be resolved in.
            </summary>
            <typeparam name="TLimit">Registration limit type.</typeparam>
            <typeparam name="TActivatorData">Activator data type.</typeparam>
            <typeparam name="TRegistrationStyle">Registration style.</typeparam>
            <param name="registration">Registration to set parameter on.</param>
            <param name="order">The order for which a service will be resolved</param>
            <returns>A registration builder allowing further configuration of the component.</returns>
        </member>
        <member name="M:Autofac.Extras.Ordering.OrderedRegistrationExtensions.OrderBy``3(Autofac.Builder.IRegistrationBuilder{``0,``1,``2},System.Func{``0,System.IComparable})">
            <summary>
            Configures a function that will determine a service's resolution order dynamically.
            </summary>
            <typeparam name="TLimit">Registration limit type.</typeparam>
            <typeparam name="TActivatorData">Activator data type.</typeparam>
            <typeparam name="TRegistrationStyle">Registration style.</typeparam>
            <param name="registration">Registration to set parameter on.</param>
            <param name="keySelector">Selects an ordering based on a component's properties</param>
            <returns>A registration builder allowing further configuration of the component.</returns>
        </member>
        <member name="M:Autofac.Extras.Ordering.OrderedRegistrationExtensions.OrderByRegistration``2(Autofac.Builder.IRegistrationBuilder{``0,Autofac.Features.Scanning.ScanningActivatorData,``1},System.Int32)">
            <summary>
            Configures that services will be resolved in the order in which they are registered.
            </summary>
            <typeparam name="TLimit">Registration limit type.</typeparam>
            <typeparam name="TRegistrationStyle">Registration style.</typeparam>
            <param name="registration">Registration to set parameter on.</param>
            <param name="startingWith">An optional starting order</param>
            <returns>A registration builder allowing further configuration of the component.</returns>
        </member>
        <member name="T:Autofac.Extras.Ordering.OrderedRegistrationSource">
            <summary>
            Provides support for <see cref="T:System.Linq.IOrderedEnumerable`1"/>.
            </summary>
        </member>
        <member name="M:Autofac.Extras.Ordering.OrderedRegistrationSource.RegistrationsFor(Autofac.Core.Service,System.Func{Autofac.Core.Service,System.Collections.Generic.IEnumerable{Autofac.Core.IComponentRegistration}})">
            <summary>
            Retrieve registrations for an unregistered service, to be used
            by the container.
            </summary>
            <param name="service">The service that was requested.</param>
            <param name="registrationAccessor">A function that will return existing registrations for a service.</param>
            <returns>Registrations providing the service.</returns>
        </member>
        <member name="P:Autofac.Extras.Ordering.OrderedRegistrationSource.IsAdapterForIndividualComponents">
            <summary>
            Gets whether the registrations provided by this source are 1:1 adapters on top
            of other components (ie. like Meta, Func, or Owned.)
            </summary>
            <remarks>Always returns false.</remarks>
        </member>
        <member name="M:Autofac.Extras.Ordering.OrderedRegistrationSource.ToString">
            <summary>
            A description of the registration source.
            </summary>
        </member>
        <member name="T:Autofac.Extras.Ordering.OrderedRegistrationSourceResources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Autofac.Extras.Ordering.OrderedRegistrationSourceResources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Autofac.Extras.Ordering.OrderedRegistrationSourceResources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Autofac.Extras.Ordering.OrderedRegistrationSourceResources.OrderedRegistrationSourceDescription">
            <summary>
              Looks up a localized string similar to Guaranteed Resolution Order Support (IOrderedEnumerable&lt;T&gt;).
            </summary>
        </member>
        <member name="T:Autofac.Extras.Ordering.OrderedResolutionExtensions">
            <summary>
            Provides methods that simplify resolution of ordered services.
            </summary>
        </member>
        <member name="M:Autofac.Extras.Ordering.OrderedResolutionExtensions.AsOrdered``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Returns an <see cref="T:System.Collections.Generic.IEnumerable`1"/> which is already assumed to be ordered
            as an <see cref="T:System.Linq.IOrderedEnumerable`1"/>.
            </summary>
            <typeparam name="TService">The type of elements</typeparam>
            <param name="alreadyOrdered">An already ordered sequence of elements</param>
            <returns>The sequence as an <see cref="T:System.Linq.IOrderedEnumerable`1"/></returns>
        </member>
        <member name="M:Autofac.Extras.Ordering.OrderedResolutionExtensions.ResolveOrdered``1(Autofac.IComponentContext,Autofac.Core.Parameter[])">
            <summary>
            Retrieves ordered services from the context.
            </summary>
            <typeparam name="TService">The type of service to which the results will be cast.</typeparam>
            <param name="context">The context from which to resolve the services.</param>
            <param name="parameters">The parameters.</param>
            <returns>The component instances that provide the service.</returns>
        </member>
        <member name="M:Autofac.Extras.Ordering.OrderedResolutionExtensions.ResolveOrdered``1(Autofac.IComponentContext,System.Collections.Generic.IEnumerable{Autofac.Core.Parameter})">
            <summary>
            Retrieves ordered services from the context.
            </summary>
            <typeparam name="TService">The type of service to which the results will be cast.</typeparam>
            <param name="context">The context from which to resolve the services.</param>
            <param name="parameters">The parameters.</param>
            <returns>The component instances that provide the service.</returns>
        </member>
        <member name="T:Autofac.Extras.Ordering.OrderedResolutionExtensions.AlreadyOrderedEnumerable`1">
            <summary>
            A simple wrapper that presents an <see cref="T:System.Collections.Generic.IEnumerable`1"/> as an assumed-to-already-be-ordered collection.
            </summary>
        </member>
        <member name="M:Autofac.Extras.Ordering.OrderedResolutionExtensions.AlreadyOrderedEnumerable`1.CreateOrderedEnumerable``1(System.Func{`0,``0},System.Collections.Generic.IComparer{``0},System.Boolean)">
            <summary>
            This method would be invoked if OrderBy was called again on the collection (unlikely for this usage).
            </summary>
        </member>
        <member name="T:Autofac.Extras.Ordering.Utilities.TypeExtensions">
            <summary>
            Contains extension methods for <see cref="T:System.Type"/>.
            </summary>
        </member>
        <member name="M:Autofac.Extras.Ordering.Utilities.TypeExtensions.IsInstanceOfGenericType(System.Type,System.Type)">
            <summary>
            Determines whether a type is a closed instance of a generic type definition.
            </summary>
        </member>
    </members>
</doc>
